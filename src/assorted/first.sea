
extern "kernel32.lib" {
    fn ExitProcess(exit_code: u32);
    fn GetStdHandle(key: u32) -> u64;
    fn WriteFile(file: u64, buffer: *u8, length: u32, written: *u32, overlapped: *void);
}

let stdout_handle = GetStdHandle(u32(-11));
fn print(string: String) {
    let written: u32;
    WriteFile(stdout_handle, string.data, u32(string.length), &written, null);
}

fn main() {
    print("Hello world\n");
    print_direction(Direction::NORTH);
    print_direction(Direction::SOUTH);
    print(get_direction_instruction(Direction::EAST));
    ExitProcess(0);
}

fn print_direction(dir: Direction) {
    // NB You probably want to use 'enum_member_name(dir)' instead though
    switch dir {
        NORTH: print("North\n");
        SOUTH: print("South\n");
        EAST:  print("East\n");
        WEST:  print("West\n");
    }
}

fn get_direction_instruction(dir: Direction) -> String {
    switch dir {
        NORTH: return "Go upwards";
        SOUTH: return "Don't go upwards";
        EAST:  ; // This is an empty case
        WEST:  return "Go left";
    }
    return "Go right";
}

enum Direction { NORTH, SOUTH, EAST, WEST }
